package socket_client;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JButton;

/**
 *
 * @author Muhammad Ahsan Anjum Butt
 */
public class Client extends javax.swing.JFrame
{
    ServerConnection serverConnection;
       
    
    private class ServerConnectionAdapter extends MouseAdapter
    {
        private int isValidPortNo(String portNoString)
        {
            try
            {
                int portNo = Integer.parseInt(portNoString);
                if(portNo > 9092)
                    return portNo;
            }
            catch(NumberFormatException e) { }
            return -1;
        }
        
        @Override
        public void mouseClicked(MouseEvent e)
        {
            if(connectDisconnectButton.getText().equals("Connect"))
            {
                int portNo = isValidPortNo(portNoTextField.getText());
                if(portNo > 0)
                {
                    connectDisconnectButton.setText("Connecting...");
                    connectDisconnectButton.setEnabled(false);


                    serverConnection = new SocketServerConnection(Client.this, portNo);
                    serverConnection.start();
                }
            }
            else if(connectDisconnectButton.getText().equals("Disconnect"))
            {
                serverConnection.disconnect();
                serverConnection = null;
            }
        }   
    }
    
    private class MsgSendingAdapter extends MouseAdapter
    {
        @Override
        public void mouseClicked(MouseEvent e)
        {
            String msg = msgTypingTextField.getText();
            serverConnection.send(serverConnection + "  :  " + msg);
            msgTypingTextField.setText("");
            appendToMsgsTextArea("SENT:    " + serverConnection.toString() + " : " + msg);
        }   
    }
    
    public final void enableMsgSendingControls(boolean toEnable)
    {
        sendButton.setEnabled(toEnable);
        msgTypingTextField.setEnabled(toEnable);
    }
    
    /**
     * Creates new form Client
     */
    public Client()
    {
        initComponents();
        
        connectDisconnectButton.addMouseListener(new ServerConnectionAdapter());
        sendButton.addMouseListener(new MsgSendingAdapter());
        enableMsgSendingControls(false);
        msgsDisplayTextArea.setWrapStyleWord(true);
        msgsDisplayTextArea.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgsDisplayTextArea = new javax.swing.JTextArea();
        msgTypingTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();
        connectDisconnectButton = new javax.swing.JButton();
        portNoTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        portNoErrotLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        msgsDisplayTextArea.setColumns(20);
        msgsDisplayTextArea.setRows(5);
        jScrollPane1.setViewportView(msgsDisplayTextArea);

        sendButton.setText("Send");
        sendButton.setName(""); // NOI18N

        connectDisconnectButton.setText("Connect");
        connectDisconnectButton.setName(""); // NOI18N

        jLabel1.setText("Port #:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(msgTypingTextField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(connectDisconnectButton, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(portNoTextField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(portNoErrotLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(connectDisconnectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(portNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(portNoErrotLabel)
                        .addGap(123, 123, 123)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(msgTypingTextField))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connectDisconnectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField msgTypingTextField;
    private javax.swing.JTextArea msgsDisplayTextArea;
    private javax.swing.JLabel portNoErrotLabel;
    private javax.swing.JTextField portNoTextField;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables

    public JButton getConnectDisconnectButton()
    {
        return connectDisconnectButton;
    }

    public void appendToMsgsTextArea(String toAppend)
    {
        msgsDisplayTextArea.append('\n' + toAppend + '\n');
    }
    
}
